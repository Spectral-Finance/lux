[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lux-sdk"
version = "0.1.0"
description = "Python SDK for creating and validating Lux signals"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "Spectral Labs", email = "info@spectrallabs.dev" }
]
keywords = [
    "lux",
    "signals",
    "validation",
    "schema"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
dependencies = [
    "jsonschema>=4.0.0"
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pydantic>=2.0.0"
]

[project.urls]
Homepage = "https://github.com/spectrallabs/lux"
Documentation = "https://docs.spectrallabs.dev"
Repository = "https://github.com/spectrallabs/lux.git"
Issues = "https://github.com/spectrallabs/lux/issues"

[tool.hatch.build.targets.wheel]
packages = ["lux_sdk"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=lux_sdk --cov-report=term-missing"

[tool.coverage.run]
source = ["lux_sdk"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true 